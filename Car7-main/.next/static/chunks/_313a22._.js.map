{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/ai-car-marketplace/lib/utils.js"],"sourcesContent":["import { clsx } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAM;IAC1B,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://E%3A/ai-car-marketplace/components/ui/button.jsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2\",\r\n        sm: \"h-8 rounded-md px-3 text-xs\",\r\n        lg: \"h-10 rounded-md px-8\",\r\n        icon: \"h-9 w-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst Button = React.forwardRef(({ className, variant, size, asChild = false, ...props }, ref) => {\r\n  const Comp = asChild ? Slot : \"button\"\r\n  return (\r\n    (<Comp\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      ref={ref}\r\n      {...props} />)\r\n  );\r\n})\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,MAAM,uBAAS,8JAAM,UAAU,MAAC,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxF,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACG,6LAAC;QACA,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAEf;;AACA,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file://E%3A/ai-car-marketplace/components/ui/card.jsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"rounded-xl border bg-card text-card-foreground shadow\", className)}\r\n    {...props} />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props} />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\r\n    {...props} />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props} />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props} />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACtD,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,yDAAyD;QACtE,GAAG,KAAK;;;;;;;AAEb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAEb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;AAEb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACjE,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAEb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAEb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file://E%3A/ai-car-marketplace/components/ui/badge.jsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Badge({\r\n  className,\r\n  variant,\r\n  ...props\r\n}) {\r\n  return (<div className={cn(badgeVariants({ variant }), className)} {...props} />);\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OACJ;IACC,qBAAQ,6LAAC;QAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAC9E;KANS"}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file://E%3A/ai-car-marketplace/actions/car-listing.js"],"sourcesContent":["\"use server\";\r\n\r\nimport { serializeCarData } from \"@/lib/helpers\";\r\nimport { db } from \"@/lib/prisma\";\r\nimport { auth } from \"@clerk/nextjs/server\";\r\nimport { revalidatePath } from \"next/cache\";\r\n\r\n/**\r\n * Get simplified filters for the car marketplace\r\n */\r\nexport async function getCarFilters() {\r\n  try {\r\n    // Get unique makes\r\n    const makes = await db.car.findMany({\r\n      where: { status: \"AVAILABLE\" },\r\n      select: { make: true },\r\n      distinct: [\"make\"],\r\n      orderBy: { make: \"asc\" },\r\n    });\r\n\r\n    // Get unique body types\r\n    const bodyTypes = await db.car.findMany({\r\n      where: { status: \"AVAILABLE\" },\r\n      select: { bodyType: true },\r\n      distinct: [\"bodyType\"],\r\n      orderBy: { bodyType: \"asc\" },\r\n    });\r\n\r\n    // Get unique fuel types\r\n    const fuelTypes = await db.car.findMany({\r\n      where: { status: \"AVAILABLE\" },\r\n      select: { fuelType: true },\r\n      distinct: [\"fuelType\"],\r\n      orderBy: { fuelType: \"asc\" },\r\n    });\r\n\r\n    // Get unique transmissions\r\n    const transmissions = await db.car.findMany({\r\n      where: { status: \"AVAILABLE\" },\r\n      select: { transmission: true },\r\n      distinct: [\"transmission\"],\r\n      orderBy: { transmission: \"asc\" },\r\n    });\r\n\r\n    // Get min and max prices using Prisma aggregations\r\n    const priceAggregations = await db.car.aggregate({\r\n      where: { status: \"AVAILABLE\" },\r\n      _min: { price: true },\r\n      _max: { price: true },\r\n    });\r\n\r\n    return {\r\n      success: true,\r\n      data: {\r\n        makes: makes.map((item) => item.make),\r\n        bodyTypes: bodyTypes.map((item) => item.bodyType),\r\n        fuelTypes: fuelTypes.map((item) => item.fuelType),\r\n        transmissions: transmissions.map((item) => item.transmission),\r\n        priceRange: {\r\n          min: priceAggregations._min.price\r\n            ? parseFloat(priceAggregations._min.price.toString())\r\n            : 0,\r\n          max: priceAggregations._max.price\r\n            ? parseFloat(priceAggregations._max.price.toString())\r\n            : 100000,\r\n        },\r\n      },\r\n    };\r\n  } catch (error) {\r\n    throw new Error(\"Error fetching car filters:\" + error.message);\r\n  }\r\n}\r\n\r\n/**\r\n * Get cars with simplified filters\r\n */\r\nexport async function getCars({\r\n  search = \"\",\r\n  make = \"\",\r\n  bodyType = \"\",\r\n  fuelType = \"\",\r\n  transmission = \"\",\r\n  minPrice = 0,\r\n  maxPrice = Number.MAX_SAFE_INTEGER,\r\n  sortBy = \"newest\", // Options: newest, priceAsc, priceDesc\r\n  page = 1,\r\n  limit = 6,\r\n}) {\r\n  try {\r\n    // Get current user if authenticated\r\n    const { userId } = await auth();\r\n    let dbUser = null;\r\n\r\n    if (userId) {\r\n      dbUser = await db.user.findUnique({\r\n        where: { clerkUserId: userId },\r\n      });\r\n    }\r\n\r\n    // Build where conditions\r\n    let where = {\r\n      status: \"AVAILABLE\",\r\n    };\r\n\r\n    if (search) {\r\n      where.OR = [\r\n        { make: { contains: search, mode: \"insensitive\" } },\r\n        { model: { contains: search, mode: \"insensitive\" } },\r\n        { description: { contains: search, mode: \"insensitive\" } },\r\n      ];\r\n    }\r\n\r\n    if (make) where.make = { equals: make, mode: \"insensitive\" };\r\n    if (bodyType) where.bodyType = { equals: bodyType, mode: \"insensitive\" };\r\n    if (fuelType) where.fuelType = { equals: fuelType, mode: \"insensitive\" };\r\n    if (transmission)\r\n      where.transmission = { equals: transmission, mode: \"insensitive\" };\r\n\r\n    // Add price range\r\n    where.price = {\r\n      gte: parseFloat(minPrice) || 0,\r\n    };\r\n\r\n    if (maxPrice && maxPrice < Number.MAX_SAFE_INTEGER) {\r\n      where.price.lte = parseFloat(maxPrice);\r\n    }\r\n\r\n    // Calculate pagination\r\n    const skip = (page - 1) * limit;\r\n\r\n    // Determine sort order\r\n    let orderBy = {};\r\n    switch (sortBy) {\r\n      case \"priceAsc\":\r\n        orderBy = { price: \"asc\" };\r\n        break;\r\n      case \"priceDesc\":\r\n        orderBy = { price: \"desc\" };\r\n        break;\r\n      case \"newest\":\r\n      default:\r\n        orderBy = { createdAt: \"desc\" };\r\n        break;\r\n    }\r\n\r\n    // Get total count for pagination\r\n    const totalCars = await db.car.count({ where });\r\n\r\n    // Execute the main query\r\n    const cars = await db.car.findMany({\r\n      where,\r\n      take: limit,\r\n      skip,\r\n      orderBy,\r\n    });\r\n\r\n    // If we have a user, check which cars are wishlisted\r\n    let wishlisted = new Set();\r\n    if (dbUser) {\r\n      const savedCars = await db.userSavedCar.findMany({\r\n        where: { userId: dbUser.id },\r\n        select: { carId: true },\r\n      });\r\n\r\n      wishlisted = new Set(savedCars.map((saved) => saved.carId));\r\n    }\r\n\r\n    // Serialize and check wishlist status\r\n    const serializedCars = cars.map((car) =>\r\n      serializeCarData(car, wishlisted.has(car.id))\r\n    );\r\n\r\n    return {\r\n      success: true,\r\n      data: serializedCars,\r\n      pagination: {\r\n        total: totalCars,\r\n        page,\r\n        limit,\r\n        pages: Math.ceil(totalCars / limit),\r\n      },\r\n    };\r\n  } catch (error) {\r\n    throw new Error(\"Error fetching cars:\" + error.message);\r\n  }\r\n}\r\n\r\n/**\r\n * Toggle car in user's wishlist\r\n */\r\nexport async function toggleSavedCar(carId) {\r\n  try {\r\n    const { userId } = await auth();\r\n    if (!userId) throw new Error(\"Unauthorized\");\r\n\r\n    const user = await db.user.findUnique({\r\n      where: { clerkUserId: userId },\r\n    });\r\n\r\n    if (!user) throw new Error(\"User not found\");\r\n\r\n    // Check if car exists\r\n    const car = await db.car.findUnique({\r\n      where: { id: carId },\r\n    });\r\n\r\n    if (!car) {\r\n      return {\r\n        success: false,\r\n        error: \"Car not found\",\r\n      };\r\n    }\r\n\r\n    // Check if car is already saved\r\n    const existingSave = await db.userSavedCar.findUnique({\r\n      where: {\r\n        userId_carId: {\r\n          userId: user.id,\r\n          carId,\r\n        },\r\n      },\r\n    });\r\n\r\n    // If car is already saved, remove it\r\n    if (existingSave) {\r\n      await db.userSavedCar.delete({\r\n        where: {\r\n          userId_carId: {\r\n            userId: user.id,\r\n            carId,\r\n          },\r\n        },\r\n      });\r\n\r\n      revalidatePath(`/saved-cars`);\r\n      return {\r\n        success: true,\r\n        saved: false,\r\n        message: \"Car removed from favorites\",\r\n      };\r\n    }\r\n\r\n    // If car is not saved, add it\r\n    await db.userSavedCar.create({\r\n      data: {\r\n        userId: user.id,\r\n        carId,\r\n      },\r\n    });\r\n\r\n    revalidatePath(`/saved-cars`);\r\n    return {\r\n      success: true,\r\n      saved: true,\r\n      message: \"Car added to favorites\",\r\n    };\r\n  } catch (error) {\r\n    throw new Error(\"Error toggling saved car:\" + error.message);\r\n  }\r\n}\r\n\r\n/**\r\n * Get car details by ID\r\n */\r\nexport async function getCarById(carId) {\r\n  try {\r\n    // Get current user if authenticated\r\n    const { userId } = await auth();\r\n    let dbUser = null;\r\n\r\n    if (userId) {\r\n      dbUser = await db.user.findUnique({\r\n        where: { clerkUserId: userId },\r\n      });\r\n    }\r\n\r\n    // Get car details\r\n    const car = await db.car.findUnique({\r\n      where: { id: carId },\r\n    });\r\n\r\n    if (!car) {\r\n      return {\r\n        success: false,\r\n        error: \"Car not found\",\r\n      };\r\n    }\r\n\r\n    // Check if car is wishlisted by user\r\n    let isWishlisted = false;\r\n    if (dbUser) {\r\n      const savedCar = await db.userSavedCar.findUnique({\r\n        where: {\r\n          userId_carId: {\r\n            userId: dbUser.id,\r\n            carId,\r\n          },\r\n        },\r\n      });\r\n\r\n      isWishlisted = !!savedCar;\r\n    }\r\n\r\n    // Check if user has already booked a test drive for this car\r\n    const existingTestDrive = await db.testDriveBooking.findFirst({\r\n      where: {\r\n        carId,\r\n        userId: dbUser.id,\r\n        status: { in: [\"PENDING\", \"CONFIRMED\", \"COMPLETED\"] },\r\n      },\r\n      orderBy: {\r\n        createdAt: \"desc\",\r\n      },\r\n    });\r\n\r\n    let userTestDrive = null;\r\n\r\n    if (existingTestDrive) {\r\n      userTestDrive = {\r\n        id: existingTestDrive.id,\r\n        status: existingTestDrive.status,\r\n        bookingDate: existingTestDrive.bookingDate.toISOString(),\r\n      };\r\n    }\r\n\r\n    // Get dealership info for test drive availability\r\n    const dealership = await db.dealershipInfo.findFirst({\r\n      include: {\r\n        workingHours: true,\r\n      },\r\n    });\r\n\r\n    return {\r\n      success: true,\r\n      data: {\r\n        ...serializeCarData(car, isWishlisted),\r\n        testDriveInfo: {\r\n          userTestDrive,\r\n          dealership: dealership\r\n            ? {\r\n                ...dealership,\r\n                createdAt: dealership.createdAt.toISOString(),\r\n                updatedAt: dealership.updatedAt.toISOString(),\r\n                workingHours: dealership.workingHours.map((hour) => ({\r\n                  ...hour,\r\n                  createdAt: hour.createdAt.toISOString(),\r\n                  updatedAt: hour.updatedAt.toISOString(),\r\n                })),\r\n              }\r\n            : null,\r\n        },\r\n      },\r\n    };\r\n  } catch (error) {\r\n    throw new Error(\"Error fetching car details:\" + error.message);\r\n  }\r\n}\r\n\r\n/**\r\n * Get user's saved cars\r\n */\r\nexport async function getSavedCars() {\r\n  try {\r\n    const { userId } = await auth();\r\n    if (!userId) {\r\n      return {\r\n        success: false,\r\n        error: \"Unauthorized\",\r\n      };\r\n    }\r\n\r\n    // Get the user from our database\r\n    const user = await db.user.findUnique({\r\n      where: { clerkUserId: userId },\r\n    });\r\n\r\n    if (!user) {\r\n      return {\r\n        success: false,\r\n        error: \"User not found\",\r\n      };\r\n    }\r\n\r\n    // Get saved cars with their details\r\n    const savedCars = await db.userSavedCar.findMany({\r\n      where: { userId: user.id },\r\n      include: {\r\n        car: true,\r\n      },\r\n      orderBy: { savedAt: \"desc\" },\r\n    });\r\n\r\n    // Extract and format car data\r\n    const cars = savedCars.map((saved) => serializeCarData(saved.car));\r\n\r\n    return {\r\n      success: true,\r\n      data: cars,\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error fetching saved cars:\", error);\r\n    return {\r\n      success: false,\r\n      error: error.message,\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;IAUsB;IAkEA;IAkHA;IA0EA;IAiGA"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file://E%3A/ai-car-marketplace/hooks/use-fetch.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { toast } from \"sonner\";\r\n\r\nconst useFetch = (cb) => {\r\n  const [data, setData] = useState(undefined);\r\n  const [loading, setLoading] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fn = async (...args) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await cb(...args);\r\n      setData(response);\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(error);\r\n      toast.error(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { data, loading, error, fn, setData };\r\n};\r\n\r\nexport default useFetch;\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;;AAEA,MAAM,WAAW,CAAC;;IAChB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,KAAK,OAAO,GAAG;QACnB,WAAW;QACX,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,QAAQ;YACR,SAAS;QACX,EAAE,OAAO,OAAO;YACd,SAAS;YACT,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM,OAAO;QAC3B,SAAU;YACR,WAAW;QACb;IACF;IAEA,OAAO;QAAE;QAAM;QAAS;QAAO;QAAI;IAAQ;AAC7C;GAtBM;uCAwBS"}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":["file://E%3A/ai-car-marketplace/components/car-card.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport { Heart, Car as CarIcon, Loader2 } from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { toast } from \"sonner\";\r\nimport { toggleSavedCar } from \"@/actions/car-listing\";\r\nimport { useAuth } from \"@clerk/nextjs\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport useFetch from \"@/hooks/use-fetch\";\r\n\r\nexport const CarCard = ({ car }) => {\r\n  const { isSignedIn } = useAuth();\r\n  const router = useRouter();\r\n  const [isSaved, setIsSaved] = useState(car.wishlisted);\r\n\r\n  // Use the useFetch hook\r\n  const {\r\n    loading: isToggling,\r\n    fn: toggleSavedCarFn,\r\n    data: toggleResult,\r\n    error: toggleError,\r\n  } = useFetch(toggleSavedCar);\r\n\r\n  // Handle toggle result with useEffect\r\n  useEffect(() => {\r\n    if (toggleResult?.success && toggleResult.saved !== isSaved) {\r\n      setIsSaved(toggleResult.saved);\r\n      toast.success(toggleResult.message);\r\n    }\r\n  }, [toggleResult, isSaved]);\r\n\r\n  // Handle errors with useEffect\r\n  useEffect(() => {\r\n    if (toggleError) {\r\n      toast.error(\"Failed to update favorites\");\r\n    }\r\n  }, [toggleError]);\r\n\r\n  // Handle save/unsave car\r\n  const handleToggleSave = async (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    if (!isSignedIn) {\r\n      toast.error(\"Please sign in to save cars\");\r\n      router.push(\"/sign-in\");\r\n      return;\r\n    }\r\n\r\n    if (isToggling) return;\r\n\r\n    // Call the toggleSavedCar function using our useFetch hook\r\n    await toggleSavedCarFn(car.id);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"overflow-hidden hover:shadow-lg transition group\">\r\n      <div className=\"relative h-48\">\r\n        {car.images && car.images.length > 0 ? (\r\n          <div className=\"relative w-full h-full\">\r\n            <Image\r\n              src={car.images[0]}\r\n              alt={`${car.make} ${car.model}`}\r\n              fill\r\n              className=\"object-cover group-hover:scale-105 transition duration-300\"\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"w-full h-full bg-gray-200 flex items-center justify-center\">\r\n            <CarIcon className=\"h-12 w-12 text-gray-400\" />\r\n          </div>\r\n        )}\r\n\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"icon\"\r\n          className={`absolute top-2 right-2 bg-white/90 rounded-full p-1.5 ${\r\n            isSaved\r\n              ? \"text-red-500 hover:text-red-600\"\r\n              : \"text-gray-600 hover:text-gray-900\"\r\n          }`}\r\n          onClick={handleToggleSave}\r\n          disabled={isToggling}\r\n        >\r\n          {isToggling ? (\r\n            <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n          ) : (\r\n            <Heart className={isSaved ? \"fill-current\" : \"\"} size={20} />\r\n          )}\r\n        </Button>\r\n      </div>\r\n\r\n      <CardContent className=\"p-4\">\r\n        <div className=\"flex flex-col mb-2\">\r\n          <h3 className=\"text-lg font-bold line-clamp-1\">\r\n            {car.make} {car.model}\r\n          </h3>\r\n          <span className=\"text-xl font-bold text-blue-600\">\r\n            ${car.price.toLocaleString()}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"text-gray-600 mb-2 flex items-center\">\r\n          <span>{car.year}</span>\r\n          <span className=\"mx-2\">•</span>\r\n          <span>{car.transmission}</span>\r\n          <span className=\"mx-2\">•</span>\r\n          <span>{car.fuelType}</span>\r\n        </div>\r\n\r\n        <div className=\"flex flex-wrap gap-1 mb-4\">\r\n          <Badge variant=\"outline\" className=\"bg-gray-50\">\r\n            {car.bodyType}\r\n          </Badge>\r\n          <Badge variant=\"outline\" className=\"bg-gray-50\">\r\n            {car.mileage.toLocaleString()} miles\r\n          </Badge>\r\n          <Badge variant=\"outline\" className=\"bg-gray-50\">\r\n            {car.color}\r\n          </Badge>\r\n        </div>\r\n\r\n        <div className=\"flex justify-between\">\r\n          <Button\r\n            className=\"flex-1\"\r\n            onClick={() => {\r\n              router.push(`/cars/${car.id}`);\r\n            }}\r\n          >\r\n            View Car\r\n          </Button>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 618, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 624, "column": 0}, "map": {"version":3,"sources":["file://E%3A/ai-car-marketplace/app/%28main%29/saved-cars/_components/saved-cars-list.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Link from \"next/link\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { CarCard } from \"@/components/car-card\";\r\nimport { Heart } from \"lucide-react\";\r\n\r\nexport function SavedCarsList({ initialData }) {\r\n  // No saved cars\r\n  if (!initialData?.data || initialData?.data.length === 0) {\r\n    return (\r\n      <div className=\"min-h-[400px] flex flex-col items-center justify-center text-center p-8 border rounded-lg bg-gray-50\">\r\n        <div className=\"bg-gray-100 p-4 rounded-full mb-4\">\r\n          <Heart className=\"h-8 w-8 text-gray-500\" />\r\n        </div>\r\n        <h3 className=\"text-lg font-medium mb-2\">No Saved Cars</h3>\r\n        <p className=\"text-gray-500 mb-6 max-w-md\">\r\n          You haven't saved any cars yet. Browse our listings and click the\r\n          heart icon to save cars for later.\r\n        </p>\r\n        <Button variant=\"default\" asChild>\r\n          <Link href=\"/cars\">Browse Cars</Link>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Display saved cars\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n      {initialData?.data?.map((car) => (\r\n        <CarCard key={car.id} car={{ ...car, wishlisted: true }} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOO,SAAS,cAAc,EAAE,WAAW,EAAE;IAC3C,gBAAgB;IAChB,IAAI,CAAC,aAAa,QAAQ,aAAa,KAAK,WAAW,GAAG;QACxD,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,uMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;8BAEnB,6LAAC;oBAAG,WAAU;8BAA2B;;;;;;8BACzC,6LAAC;oBAAE,WAAU;8BAA8B;;;;;;8BAI3C,6LAAC,8HAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAU,OAAO;8BAC/B,cAAA,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAK;kCAAQ;;;;;;;;;;;;;;;;;IAI3B;IAEA,qBAAqB;IACrB,qBACE,6LAAC;QAAI,WAAU;kBACZ,aAAa,MAAM,IAAI,CAAC,oBACvB,6LAAC,6HAAA,CAAA,UAAO;gBAAc,KAAK;oBAAE,GAAG,GAAG;oBAAE,YAAY;gBAAK;eAAxC,IAAI,EAAE;;;;;;;;;;AAI5B;KA5BgB"}},
    {"offset": {"line": 722, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}