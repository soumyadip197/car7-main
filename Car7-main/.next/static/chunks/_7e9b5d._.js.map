{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/ai-car-marketplace/components/ui/input.jsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef(({ className, type, ...props }, ref) => {\r\n  return (\r\n    (<input\r\n      type={type}\r\n      className={cn(\r\n        \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        className\r\n      )}\r\n      ref={ref}\r\n      {...props} />)\r\n  );\r\n})\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,8JAAM,UAAU,MAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC7D,qBACG,6LAAC;QACA,MAAM;QACN,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAEf;;AACA,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file://E%3A/ai-car-marketplace/components/ui/button.jsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2\",\r\n        sm: \"h-8 rounded-md px-3 text-xs\",\r\n        lg: \"h-10 rounded-md px-8\",\r\n        icon: \"h-9 w-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst Button = React.forwardRef(({ className, variant, size, asChild = false, ...props }, ref) => {\r\n  const Comp = asChild ? Slot : \"button\"\r\n  return (\r\n    (<Comp\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      ref={ref}\r\n      {...props} />)\r\n  );\r\n})\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,MAAM,uBAAS,8JAAM,UAAU,MAAC,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxF,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACG,6LAAC;QACA,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAEf;;AACA,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file://E%3A/ai-car-marketplace/components/ui/textarea.jsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Textarea = React.forwardRef(({ className, ...props }, ref) => {\r\n  return (\r\n    (<textarea\r\n      className={cn(\r\n        \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        className\r\n      )}\r\n      ref={ref}\r\n      {...props} />)\r\n  );\r\n})\r\nTextarea.displayName = \"Textarea\"\r\n\r\nexport { Textarea }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,8JAAM,UAAU,MAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1D,qBACG,6LAAC;QACA,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,6QACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAEf;;AACA,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file://E%3A/ai-car-marketplace/components/ui/select.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}>\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\"flex cursor-default items-center justify-center py-1\", className)}\r\n    {...props}>\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\"flex cursor-default items-center justify-center py-1\", className)}\r\n    {...props}>\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}>\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\"p-1\", position === \"popper\" &&\r\n          \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\")}>\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\r\n    {...props} />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}>\r\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props} />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":["file://E%3A/ai-car-marketplace/components/ui/card.jsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"rounded-xl border bg-card text-card-foreground shadow\", className)}\r\n    {...props} />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props} />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\r\n    {...props} />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props} />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props} />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACtD,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,yDAAyD;QACtE,GAAG,KAAK;;;;;;;AAEb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAEb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;AAEb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACjE,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAEb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAEb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":["file://E%3A/ai-car-marketplace/components/ui/checkbox.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\r\nimport { Check } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Checkbox = React.forwardRef(({ className, ...props }, ref) => (\r\n  <CheckboxPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\r\n      className\r\n    )}\r\n    {...props}>\r\n    <CheckboxPrimitive.Indicator className={cn(\"flex items-center justify-center text-current\")}>\r\n      <Check className=\"h-4 w-4\" />\r\n    </CheckboxPrimitive.Indicator>\r\n  </CheckboxPrimitive.Root>\r\n))\r\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\r\n\r\nexport { Checkbox }\r\n"],"names":[],"mappings":";;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,yBAAW,8JAAM,UAAU,MAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1D,6LAAC,wKAAkB,IAAI;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sQACA;QAED,GAAG,KAAK;kBACT,cAAA,6LAAC,wKAAkB,SAAS;YAAC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE;sBACzC,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,wKAAkB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 509, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file://E%3A/ai-car-marketplace/components/ui/tabs.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Tabs = TabsPrimitive.Root\r\n\r\nconst TabsList = React.forwardRef(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.List\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\r\n      className\r\n    )}\r\n    {...props} />\r\n))\r\nTabsList.displayName = TabsPrimitive.List.displayName\r\n\r\nconst TabsTrigger = React.forwardRef(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\r\n      className\r\n    )}\r\n    {...props} />\r\n))\r\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\r\n\r\nconst TabsContent = React.forwardRef(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\r\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\r\n      className\r\n    )}\r\n    {...props} />\r\n))\r\nTabsContent.displayName = TabsPrimitive.Content.displayName\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,OAAO,oKAAc,IAAI;AAE/B,MAAM,yBAAW,8JAAM,UAAU,MAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1D,6LAAC,oKAAc,IAAI;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;;AAEb,SAAS,WAAW,GAAG,oKAAc,IAAI,CAAC,WAAW;AAErD,MAAM,4BAAc,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,6LAAC,oKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;;AAEb,YAAY,WAAW,GAAG,oKAAc,OAAO,CAAC,WAAW;AAE3D,MAAM,4BAAc,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,6LAAC,oKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAEb,YAAY,WAAW,GAAG,oKAAc,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 575, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 581, "column": 0}, "map": {"version":3,"sources":["file://E%3A/ai-car-marketplace/components/ui/label.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root ref={ref} className={cn(labelVariants(), className)} {...props} />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,8JAAM,UAAU,MAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACvD,6LAAC,qKAAe,IAAI;QAAC,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAAa,GAAG,KAAK;;;;;;;AAErF,MAAM,WAAW,GAAG,qKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 614, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 620, "column": 0}, "map": {"version":3,"sources":["file://E%3A/ai-car-marketplace/actions/cars.js"],"sourcesContent":["\"use server\";\r\n\r\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\r\nimport { cookies } from \"next/headers\";\r\nimport { revalidatePath } from \"next/cache\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { db } from \"@/lib/prisma\";\r\nimport { createClient } from \"@/lib/supabase\";\r\nimport { auth } from \"@clerk/nextjs/server\";\r\nimport { serializeCarData } from \"@/lib/helpers\";\r\n\r\n// Function to convert File to base64\r\nasync function fileToBase64(file) {\r\n  const bytes = await file.arrayBuffer();\r\n  const buffer = Buffer.from(bytes);\r\n  return buffer.toString(\"base64\");\r\n}\r\n\r\n// Gemini AI integration for car image processing\r\nexport async function processCarImageWithAI(file) {\r\n  try {\r\n    // Check if API key is available\r\n    if (!process.env.GEMINI_API_KEY) {\r\n      throw new Error(\"Gemini API key is not configured\");\r\n    }\r\n\r\n    // Initialize Gemini API\r\n    const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);\r\n    const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash\" });\r\n\r\n    // Convert image file to base64\r\n    const base64Image = await fileToBase64(file);\r\n\r\n    // Create image part for the model\r\n    const imagePart = {\r\n      inlineData: {\r\n        data: base64Image,\r\n        mimeType: file.type,\r\n      },\r\n    };\r\n\r\n    // Define the prompt for car detail extraction\r\n    const prompt = `\r\n      Analyze this car image and extract the following information:\r\n      1. Make (manufacturer)\r\n      2. Model\r\n      3. Year (approximately)\r\n      4. Color\r\n      5. Body type (SUV, Sedan, Hatchback, etc.)\r\n      6. Mileage\r\n      7. Fuel type (your best guess)\r\n      8. Transmission type (your best guess)\r\n      9. Price (your best guess)\r\n      9. Short Description as to be added to a car listing\r\n\r\n      Format your response as a clean JSON object with these fields:\r\n      {\r\n        \"make\": \"\",\r\n        \"model\": \"\",\r\n        \"year\": 0000,\r\n        \"color\": \"\",\r\n        \"price\": \"\",\r\n        \"mileage\": \"\",\r\n        \"bodyType\": \"\",\r\n        \"fuelType\": \"\",\r\n        \"transmission\": \"\",\r\n        \"description\": \"\",\r\n        \"confidence\": 0.0\r\n      }\r\n\r\n      For confidence, provide a value between 0 and 1 representing how confident you are in your overall identification.\r\n      Only respond with the JSON object, nothing else.\r\n    `;\r\n\r\n    // Get response from Gemini\r\n    const result = await model.generateContent([imagePart, prompt]);\r\n    const response = await result.response;\r\n    const text = response.text();\r\n    const cleanedText = text.replace(/```(?:json)?\\n?/g, \"\").trim();\r\n\r\n    // Parse the JSON response\r\n    try {\r\n      const carDetails = JSON.parse(cleanedText);\r\n\r\n      // Validate the response format\r\n      const requiredFields = [\r\n        \"make\",\r\n        \"model\",\r\n        \"year\",\r\n        \"color\",\r\n        \"bodyType\",\r\n        \"price\",\r\n        \"mileage\",\r\n        \"fuelType\",\r\n        \"transmission\",\r\n        \"description\",\r\n        \"confidence\",\r\n      ];\r\n\r\n      const missingFields = requiredFields.filter(\r\n        (field) => !(field in carDetails)\r\n      );\r\n\r\n      if (missingFields.length > 0) {\r\n        throw new Error(\r\n          `AI response missing required fields: ${missingFields.join(\", \")}`\r\n        );\r\n      }\r\n\r\n      // Return success response with data\r\n      return {\r\n        success: true,\r\n        data: carDetails,\r\n      };\r\n    } catch (parseError) {\r\n      console.error(\"Failed to parse AI response:\", parseError);\r\n      console.log(\"Raw response:\", text);\r\n      return {\r\n        success: false,\r\n        error: \"Failed to parse AI response\",\r\n      };\r\n    }\r\n  } catch (error) {\r\n    console.error();\r\n    throw new Error(\"Gemini API error:\" + error.message);\r\n  }\r\n}\r\n\r\n// Add a car to the database with images\r\nexport async function addCar({ carData, images }) {\r\n  try {\r\n    const { userId } = await auth();\r\n    if (!userId) throw new Error(\"Unauthorized\");\r\n\r\n    const user = await db.user.findUnique({\r\n      where: { clerkUserId: userId },\r\n    });\r\n\r\n    if (!user) throw new Error(\"User not found\");\r\n\r\n    // Create a unique folder name for this car's images\r\n    const carId = uuidv4();\r\n    const folderPath = `cars/${carId}`;\r\n\r\n    // Initialize Supabase client for server-side operations\r\n    const cookieStore = await cookies();\r\n    const supabase = createClient(cookieStore);\r\n\r\n    // Upload all images to Supabase storage\r\n    const imageUrls = [];\r\n\r\n    for (let i = 0; i < images.length; i++) {\r\n      const base64Data = images[i];\r\n\r\n      // Skip if image data is not valid\r\n      if (!base64Data || !base64Data.startsWith(\"data:image/\")) {\r\n        console.warn(\"Skipping invalid image data\");\r\n        continue;\r\n      }\r\n\r\n      // Extract the base64 part (remove the data:image/xyz;base64, prefix)\r\n      const base64 = base64Data.split(\",\")[1];\r\n      const imageBuffer = Buffer.from(base64, \"base64\");\r\n\r\n      // Determine file extension from the data URL\r\n      const mimeMatch = base64Data.match(/data:image\\/([a-zA-Z0-9]+);/);\r\n      const fileExtension = mimeMatch ? mimeMatch[1] : \"jpeg\";\r\n\r\n      // Create filename\r\n      const fileName = `image-${Date.now()}-${i}.${fileExtension}`;\r\n      const filePath = `${folderPath}/${fileName}`;\r\n\r\n      // Upload the file buffer directly\r\n      const { data, error } = await supabase.storage\r\n        .from(\"car-images\")\r\n        .upload(filePath, imageBuffer, {\r\n          contentType: `image/${fileExtension}`,\r\n        });\r\n\r\n      if (error) {\r\n        console.error(\"Error uploading image:\", error);\r\n        throw new Error(`Failed to upload image: ${error.message}`);\r\n      }\r\n\r\n      // Get the public URL for the uploaded file\r\n      const publicUrl = `${process.env.NEXT_PUBLIC_SUPABASE_URL}/storage/v1/object/public/car-images/${filePath}`; // disable cache in config\r\n\r\n      imageUrls.push(publicUrl);\r\n    }\r\n\r\n    if (imageUrls.length === 0) {\r\n      throw new Error(\"No valid images were uploaded\");\r\n    }\r\n\r\n    // Add the car to the database\r\n    const car = await db.car.create({\r\n      data: {\r\n        id: carId, // Use the same ID we used for the folder\r\n        make: carData.make,\r\n        model: carData.model,\r\n        year: carData.year,\r\n        price: carData.price,\r\n        mileage: carData.mileage,\r\n        color: carData.color,\r\n        fuelType: carData.fuelType,\r\n        transmission: carData.transmission,\r\n        bodyType: carData.bodyType,\r\n        seats: carData.seats,\r\n        description: carData.description,\r\n        status: carData.status,\r\n        featured: carData.featured,\r\n        images: imageUrls, // Store the array of image URLs\r\n      },\r\n    });\r\n\r\n    // Revalidate the cars list page\r\n    revalidatePath(\"/admin/cars\");\r\n\r\n    return {\r\n      success: true,\r\n    };\r\n  } catch (error) {\r\n    throw new Error(\"Error adding car:\" + error.message);\r\n  }\r\n}\r\n\r\n// Fetch all cars with simple search\r\nexport async function getCars(search = \"\") {\r\n  try {\r\n    // Build where conditions\r\n    let where = {};\r\n\r\n    // Add search filter\r\n    if (search) {\r\n      where.OR = [\r\n        { make: { contains: search, mode: \"insensitive\" } },\r\n        { model: { contains: search, mode: \"insensitive\" } },\r\n        { color: { contains: search, mode: \"insensitive\" } },\r\n      ];\r\n    }\r\n\r\n    // Execute main query\r\n    const cars = await db.car.findMany({\r\n      where,\r\n      orderBy: { createdAt: \"desc\" },\r\n    });\r\n\r\n    const serializedCars = cars.map(serializeCarData);\r\n\r\n    return {\r\n      success: true,\r\n      data: serializedCars,\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error fetching cars:\", error);\r\n    return {\r\n      success: false,\r\n      error: error.message,\r\n    };\r\n  }\r\n}\r\n\r\n// Delete a car by ID\r\nexport async function deleteCar(id) {\r\n  try {\r\n    const { userId } = await auth();\r\n    if (!userId) throw new Error(\"Unauthorized\");\r\n\r\n    // First, fetch the car to get its images\r\n    const car = await db.car.findUnique({\r\n      where: { id },\r\n      select: { images: true },\r\n    });\r\n\r\n    if (!car) {\r\n      return {\r\n        success: false,\r\n        error: \"Car not found\",\r\n      };\r\n    }\r\n\r\n    // Delete the car from the database\r\n    await db.car.delete({\r\n      where: { id },\r\n    });\r\n\r\n    // Delete the images from Supabase storage\r\n    try {\r\n      const cookieStore = cookies();\r\n      const supabase = createClient(cookieStore);\r\n\r\n      // Extract file paths from image URLs\r\n      const filePaths = car.images\r\n        .map((imageUrl) => {\r\n          const url = new URL(imageUrl);\r\n          const pathMatch = url.pathname.match(/\\/car-images\\/(.*)/);\r\n          return pathMatch ? pathMatch[1] : null;\r\n        })\r\n        .filter(Boolean);\r\n\r\n      // Delete files from storage if paths were extracted\r\n      if (filePaths.length > 0) {\r\n        const { error } = await supabase.storage\r\n          .from(\"car-images\")\r\n          .remove(filePaths);\r\n\r\n        if (error) {\r\n          console.error(\"Error deleting images:\", error);\r\n          // We continue even if image deletion fails\r\n        }\r\n      }\r\n    } catch (storageError) {\r\n      console.error(\"Error with storage operations:\", storageError);\r\n      // Continue with the function even if storage operations fail\r\n    }\r\n\r\n    // Revalidate the cars list page\r\n    revalidatePath(\"/admin/cars\");\r\n\r\n    return {\r\n      success: true,\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error deleting car:\", error);\r\n    return {\r\n      success: false,\r\n      error: error.message,\r\n    };\r\n  }\r\n}\r\n\r\n// Update car status or featured status\r\nexport async function updateCarStatus(id, { status, featured }) {\r\n  try {\r\n    const { userId } = await auth();\r\n    if (!userId) throw new Error(\"Unauthorized\");\r\n\r\n    const updateData = {};\r\n\r\n    if (status !== undefined) {\r\n      updateData.status = status;\r\n    }\r\n\r\n    if (featured !== undefined) {\r\n      updateData.featured = featured;\r\n    }\r\n\r\n    // Update the car\r\n    await db.car.update({\r\n      where: { id },\r\n      data: updateData,\r\n    });\r\n\r\n    // Revalidate the cars list page\r\n    revalidatePath(\"/admin/cars\");\r\n\r\n    return {\r\n      success: true,\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error updating car status:\", error);\r\n    return {\r\n      success: false,\r\n      error: error.message,\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;IAmBsB;IA8GA;IAkGA;IAoCA;IAqEA"}},
    {"offset": {"line": 634, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 640, "column": 0}, "map": {"version":3,"sources":["file://E%3A/ai-car-marketplace/hooks/use-fetch.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { toast } from \"sonner\";\r\n\r\nconst useFetch = (cb) => {\r\n  const [data, setData] = useState(undefined);\r\n  const [loading, setLoading] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fn = async (...args) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await cb(...args);\r\n      setData(response);\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(error);\r\n      toast.error(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { data, loading, error, fn, setData };\r\n};\r\n\r\nexport default useFetch;\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;;AAEA,MAAM,WAAW,CAAC;;IAChB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,KAAK,OAAO,GAAG;QACnB,WAAW;QACX,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,QAAQ;YACR,SAAS;QACX,EAAE,OAAO,OAAO;YACd,SAAS;YACT,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM,OAAO;QAC3B,SAAU;YACR,WAAW;QACb;IACF;IAEA,OAAO;QAAE;QAAM;QAAS;QAAO;QAAI;IAAQ;AAC7C;GAtBM;uCAwBS"}},
    {"offset": {"line": 680, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 686, "column": 0}, "map": {"version":3,"sources":["file://E%3A/ai-car-marketplace/app/%28admin%29/admin/cars/create/_components/add-car-form.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport * as z from \"zod\";\r\nimport { toast } from \"sonner\";\r\nimport { Camera, ImagePlus, Loader2, X, Upload } from \"lucide-react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { addCar, processCarImageWithAI } from \"@/actions/cars\";\r\nimport useFetch from \"@/hooks/use-fetch\";\r\nimport Image from \"next/image\";\r\n\r\n// Predefined options\r\nconst fuelTypes = [\"Petrol\", \"Diesel\", \"Electric\", \"Hybrid\", \"Plug-in Hybrid\"];\r\nconst transmissions = [\"Automatic\", \"Manual\", \"Semi-Automatic\"];\r\nconst bodyTypes = [\r\n  \"SUV\",\r\n  \"Sedan\",\r\n  \"Hatchback\",\r\n  \"Convertible\",\r\n  \"Coupe\",\r\n  \"Wagon\",\r\n  \"Pickup\",\r\n];\r\nconst carStatuses = [\"AVAILABLE\", \"UNAVAILABLE\", \"SOLD\"];\r\n\r\n// Define form schema with Zod\r\nconst carFormSchema = z.object({\r\n  make: z.string().min(1, \"Make is required\"),\r\n  model: z.string().min(1, \"Model is required\"),\r\n  year: z.string().refine((val) => {\r\n    const year = parseInt(val);\r\n    return !isNaN(year) && year >= 1900 && year <= new Date().getFullYear() + 1;\r\n  }, \"Valid year required\"),\r\n  price: z.string().min(1, \"Price is required\"),\r\n  mileage: z.string().min(1, \"Mileage is required\"),\r\n  color: z.string().min(1, \"Color is required\"),\r\n  fuelType: z.string().min(1, \"Fuel type is required\"),\r\n  transmission: z.string().min(1, \"Transmission is required\"),\r\n  bodyType: z.string().min(1, \"Body type is required\"),\r\n  seats: z.string().optional(),\r\n  description: z.string().min(10, \"Description must be at least 10 characters\"),\r\n  status: z.enum([\"AVAILABLE\", \"UNAVAILABLE\", \"SOLD\"]),\r\n  featured: z.boolean().default(false),\r\n  // Images are handled separately\r\n});\r\n\r\nexport const AddCarForm = () => {\r\n  const router = useRouter();\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [uploadedImages, setUploadedImages] = useState([]);\r\n  const [uploadedAiImage, setUploadedAiImage] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [activeTab, setActiveTab] = useState(\"ai\");\r\n  const [imageError, setImageError] = useState(\"\");\r\n\r\n  // Initialize form with react-hook-form and zod\r\n  const {\r\n    register,\r\n    setValue,\r\n    getValues,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    watch,\r\n  } = useForm({\r\n    resolver: zodResolver(carFormSchema),\r\n    defaultValues: {\r\n      make: \"\",\r\n      model: \"\",\r\n      year: \"\",\r\n      price: \"\",\r\n      mileage: \"\",\r\n      color: \"\",\r\n      fuelType: \"\",\r\n      transmission: \"\",\r\n      bodyType: \"\",\r\n      seats: \"\",\r\n      description: \"\",\r\n      status: \"AVAILABLE\",\r\n      featured: false,\r\n    },\r\n  });\r\n\r\n  // Custom hooks for API calls\r\n  const {\r\n    loading: addCarLoading,\r\n    fn: addCarFn,\r\n    data: addCarResult,\r\n  } = useFetch(addCar);\r\n\r\n  const {\r\n    loading: processImageLoading,\r\n    fn: processImageFn,\r\n    data: processImageResult,\r\n    error: processImageError,\r\n  } = useFetch(processCarImageWithAI);\r\n\r\n  // Handle successful car addition\r\n  useEffect(() => {\r\n    if (addCarResult?.success) {\r\n      toast.success(\"Car added successfully\");\r\n      router.push(\"/admin/cars\");\r\n    }\r\n  }, [addCarResult, router]);\r\n\r\n  useEffect(() => {\r\n    if (processImageError) {\r\n      toast.error(processImageError.message || \"Failed to upload car\");\r\n    }\r\n  }, [processImageError]);\r\n\r\n  // Handle successful AI processing\r\n  useEffect(() => {\r\n    if (processImageResult?.success) {\r\n      const carDetails = processImageResult.data;\r\n\r\n      // Update form with AI results\r\n      setValue(\"make\", carDetails.make);\r\n      setValue(\"model\", carDetails.model);\r\n      setValue(\"year\", carDetails.year.toString());\r\n      setValue(\"color\", carDetails.color);\r\n      setValue(\"bodyType\", carDetails.bodyType);\r\n      setValue(\"fuelType\", carDetails.fuelType);\r\n      setValue(\"price\", carDetails.price);\r\n      setValue(\"mileage\", carDetails.mileage);\r\n      setValue(\"transmission\", carDetails.transmission);\r\n      setValue(\"description\", carDetails.description);\r\n\r\n      // Add the image to the uploaded images\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setUploadedImages((prev) => [...prev, e.target.result]);\r\n      };\r\n      reader.readAsDataURL(uploadedAiImage);\r\n\r\n      toast.success(\"Successfully extracted car details\", {\r\n        description: `Detected ${carDetails.year} ${carDetails.make} ${\r\n          carDetails.model\r\n        } with ${Math.round(carDetails.confidence * 100)}% confidence`,\r\n      });\r\n\r\n      // Switch to manual tab for the user to review and fill in missing details\r\n      setActiveTab(\"manual\");\r\n    }\r\n  }, [processImageResult, setValue, uploadedAiImage]);\r\n\r\n  // Process image with Gemini AI\r\n  const processWithAI = async () => {\r\n    if (!uploadedAiImage) {\r\n      toast.error(\"Please upload an image first\");\r\n      return;\r\n    }\r\n\r\n    await processImageFn(uploadedAiImage);\r\n  };\r\n\r\n  // Handle AI image upload with Dropzone\r\n  const onAiDrop = useCallback((acceptedFiles) => {\r\n    const file = acceptedFiles[0];\r\n    if (!file) return;\r\n\r\n    if (file.size > 5 * 1024 * 1024) {\r\n      toast.error(\"Image size should be less than 5MB\");\r\n      return;\r\n    }\r\n\r\n    setUploadedAiImage(file);\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      setImagePreview(e.target.result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }, []);\r\n\r\n  const { getRootProps: getAiRootProps, getInputProps: getAiInputProps } =\r\n    useDropzone({\r\n      onDrop: onAiDrop,\r\n      accept: {\r\n        \"image/*\": [\".jpeg\", \".jpg\", \".png\", \".webp\"],\r\n      },\r\n      maxFiles: 1,\r\n      multiple: false,\r\n    });\r\n\r\n  // Handle multiple image uploads with Dropzone\r\n  const onMultiImagesDrop = useCallback((acceptedFiles) => {\r\n    const validFiles = acceptedFiles.filter((file) => {\r\n      if (file.size > 5 * 1024 * 1024) {\r\n        toast.error(`${file.name} exceeds 5MB limit and will be skipped`);\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    if (validFiles.length === 0) return;\r\n\r\n    // Simulate upload progress\r\n    let progress = 0;\r\n    const interval = setInterval(() => {\r\n      progress += 10;\r\n      setUploadProgress(progress);\r\n\r\n      if (progress >= 100) {\r\n        clearInterval(interval);\r\n\r\n        // Process the images\r\n        const newImages = [];\r\n        validFiles.forEach((file) => {\r\n          const reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            newImages.push(e.target.result);\r\n\r\n            // When all images are processed\r\n            if (newImages.length === validFiles.length) {\r\n              setUploadedImages((prev) => [...prev, ...newImages]);\r\n              setUploadProgress(0);\r\n              setImageError(\"\");\r\n              toast.success(\r\n                `Successfully uploaded ${validFiles.length} images`\r\n              );\r\n            }\r\n          };\r\n          reader.readAsDataURL(file);\r\n        });\r\n      }\r\n    }, 200);\r\n  }, []);\r\n\r\n  const {\r\n    getRootProps: getMultiImageRootProps,\r\n    getInputProps: getMultiImageInputProps,\r\n  } = useDropzone({\r\n    onDrop: onMultiImagesDrop,\r\n    accept: {\r\n      \"image/*\": [\".jpeg\", \".jpg\", \".png\", \".webp\"],\r\n    },\r\n    multiple: true,\r\n  });\r\n\r\n  // Remove image from upload preview\r\n  const removeImage = (index) => {\r\n    setUploadedImages((prev) => prev.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    // Check if images are uploaded\r\n    if (uploadedImages.length === 0) {\r\n      setImageError(\"Please upload at least one image\");\r\n      return;\r\n    }\r\n\r\n    // Prepare data for server action\r\n    const carData = {\r\n      ...data,\r\n      year: parseInt(data.year),\r\n      price: parseFloat(data.price),\r\n      mileage: parseInt(data.mileage),\r\n      seats: data.seats ? parseInt(data.seats) : null,\r\n    };\r\n\r\n    // Call the addCar function with our useFetch hook\r\n    await addCarFn({\r\n      carData,\r\n      images: uploadedImages,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Tabs\r\n        defaultValue=\"ai\"\r\n        value={activeTab}\r\n        onValueChange={setActiveTab}\r\n        className=\"mt-6\"\r\n      >\r\n        <TabsList className=\"grid w-full grid-cols-2\">\r\n          <TabsTrigger value=\"manual\">Manual Entry</TabsTrigger>\r\n          <TabsTrigger value=\"ai\">AI Upload</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"manual\" className=\"mt-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Car Details</CardTitle>\r\n              <CardDescription>\r\n                Enter the details of the car you want to add.\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                  {/* Make */}\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"make\">Make</Label>\r\n                    <Input\r\n                      id=\"make\"\r\n                      {...register(\"make\")}\r\n                      placeholder=\"e.g. Toyota\"\r\n                      className={errors.make ? \"border-red-500\" : \"\"}\r\n                    />\r\n                    {errors.make && (\r\n                      <p className=\"text-xs text-red-500\">\r\n                        {errors.make.message}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Model */}\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"model\">Model</Label>\r\n                    <Input\r\n                      id=\"model\"\r\n                      {...register(\"model\")}\r\n                      placeholder=\"e.g. Camry\"\r\n                      className={errors.model ? \"border-red-500\" : \"\"}\r\n                    />\r\n                    {errors.model && (\r\n                      <p className=\"text-xs text-red-500\">\r\n                        {errors.model.message}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Year */}\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"year\">Year</Label>\r\n                    <Input\r\n                      id=\"year\"\r\n                      {...register(\"year\")}\r\n                      placeholder=\"e.g. 2022\"\r\n                      className={errors.year ? \"border-red-500\" : \"\"}\r\n                    />\r\n                    {errors.year && (\r\n                      <p className=\"text-xs text-red-500\">\r\n                        {errors.year.message}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Price */}\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"price\">Price ($)</Label>\r\n                    <Input\r\n                      id=\"price\"\r\n                      {...register(\"price\")}\r\n                      placeholder=\"e.g. 25000\"\r\n                      className={errors.price ? \"border-red-500\" : \"\"}\r\n                    />\r\n                    {errors.price && (\r\n                      <p className=\"text-xs text-red-500\">\r\n                        {errors.price.message}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Mileage */}\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"mileage\">Mileage</Label>\r\n                    <Input\r\n                      id=\"mileage\"\r\n                      {...register(\"mileage\")}\r\n                      placeholder=\"e.g. 15000\"\r\n                      className={errors.mileage ? \"border-red-500\" : \"\"}\r\n                    />\r\n                    {errors.mileage && (\r\n                      <p className=\"text-xs text-red-500\">\r\n                        {errors.mileage.message}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Color */}\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"color\">Color</Label>\r\n                    <Input\r\n                      id=\"color\"\r\n                      {...register(\"color\")}\r\n                      placeholder=\"e.g. Blue\"\r\n                      className={errors.color ? \"border-red-500\" : \"\"}\r\n                    />\r\n                    {errors.color && (\r\n                      <p className=\"text-xs text-red-500\">\r\n                        {errors.color.message}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Fuel Type */}\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"fuelType\">Fuel Type</Label>\r\n                    <Select\r\n                      onValueChange={(value) => setValue(\"fuelType\", value)}\r\n                      defaultValue={getValues(\"fuelType\")}\r\n                    >\r\n                      <SelectTrigger\r\n                        className={errors.fuelType ? \"border-red-500\" : \"\"}\r\n                      >\r\n                        <SelectValue placeholder=\"Select fuel type\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {fuelTypes.map((type) => (\r\n                          <SelectItem key={type} value={type}>\r\n                            {type}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                    {errors.fuelType && (\r\n                      <p className=\"text-xs text-red-500\">\r\n                        {errors.fuelType.message}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Transmission */}\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"transmission\">Transmission</Label>\r\n                    <Select\r\n                      onValueChange={(value) => setValue(\"transmission\", value)}\r\n                      defaultValue={getValues(\"transmission\")}\r\n                    >\r\n                      <SelectTrigger\r\n                        className={errors.transmission ? \"border-red-500\" : \"\"}\r\n                      >\r\n                        <SelectValue placeholder=\"Select transmission\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {transmissions.map((type) => (\r\n                          <SelectItem key={type} value={type}>\r\n                            {type}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                    {errors.transmission && (\r\n                      <p className=\"text-xs text-red-500\">\r\n                        {errors.transmission.message}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Body Type */}\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"bodyType\">Body Type</Label>\r\n                    <Select\r\n                      onValueChange={(value) => setValue(\"bodyType\", value)}\r\n                      defaultValue={getValues(\"bodyType\")}\r\n                    >\r\n                      <SelectTrigger\r\n                        className={errors.bodyType ? \"border-red-500\" : \"\"}\r\n                      >\r\n                        <SelectValue placeholder=\"Select body type\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {bodyTypes.map((type) => (\r\n                          <SelectItem key={type} value={type}>\r\n                            {type}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                    {errors.bodyType && (\r\n                      <p className=\"text-xs text-red-500\">\r\n                        {errors.bodyType.message}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Seats */}\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"seats\">\r\n                      Number of Seats{\" \"}\r\n                      <span className=\"text-sm text-gray-500\">(Optional)</span>\r\n                    </Label>\r\n                    <Input\r\n                      id=\"seats\"\r\n                      {...register(\"seats\")}\r\n                      placeholder=\"e.g. 5\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Status */}\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"status\">Status</Label>\r\n                    <Select\r\n                      onValueChange={(value) => setValue(\"status\", value)}\r\n                      defaultValue={getValues(\"status\")}\r\n                    >\r\n                      <SelectTrigger>\r\n                        <SelectValue placeholder=\"Select status\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {carStatuses.map((status) => (\r\n                          <SelectItem key={status} value={status}>\r\n                            {status.charAt(0) + status.slice(1).toLowerCase()}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Description */}\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"description\">Description</Label>\r\n                  <Textarea\r\n                    id=\"description\"\r\n                    {...register(\"description\")}\r\n                    placeholder=\"Enter detailed description of the car...\"\r\n                    className={`min-h-32 ${\r\n                      errors.description ? \"border-red-500\" : \"\"\r\n                    }`}\r\n                  />\r\n                  {errors.description && (\r\n                    <p className=\"text-xs text-red-500\">\r\n                      {errors.description.message}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Featured */}\r\n                <div className=\"flex items-start space-x-3 space-y-0 rounded-md border p-4\">\r\n                  <Checkbox\r\n                    id=\"featured\"\r\n                    checked={watch(\"featured\")}\r\n                    onCheckedChange={(checked) => {\r\n                      setValue(\"featured\", checked);\r\n                    }}\r\n                  />\r\n                  <div className=\"space-y-1 leading-none\">\r\n                    <Label htmlFor=\"featured\">Feature this car</Label>\r\n                    <p className=\"text-sm text-gray-500\">\r\n                      Featured cars appear on the homepage\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Image Upload with Dropzone */}\r\n                <div>\r\n                  <Label\r\n                    htmlFor=\"images\"\r\n                    className={imageError ? \"text-red-500\" : \"\"}\r\n                  >\r\n                    Images{\" \"}\r\n                    {imageError && <span className=\"text-red-500\">*</span>}\r\n                  </Label>\r\n                  <div className=\"mt-2\">\r\n                    <div\r\n                      {...getMultiImageRootProps()}\r\n                      className={`border-2 border-dashed rounded-lg p-6 text-center cursor-pointer hover:bg-gray-50 transition ${\r\n                        imageError ? \"border-red-500\" : \"border-gray-300\"\r\n                      }`}\r\n                    >\r\n                      <input {...getMultiImageInputProps()} />\r\n                      <div className=\"flex flex-col items-center justify-center\">\r\n                        <Upload className=\"h-12 w-12 text-gray-400 mb-3\" />\r\n                        <span className=\"text-sm text-gray-600\">\r\n                          Drag & drop or click to upload multiple images\r\n                        </span>\r\n                        <span className=\"text-xs text-gray-500 mt-1\">\r\n                          (JPG, PNG, WebP, max 5MB each)\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    {imageError && (\r\n                      <p className=\"text-xs text-red-500 mt-1\">{imageError}</p>\r\n                    )}\r\n                    {uploadProgress > 0 && (\r\n                      <div className=\"w-full bg-gray-200 rounded-full h-2.5 mt-2\">\r\n                        <div\r\n                          className=\"bg-blue-600 h-2.5 rounded-full\"\r\n                          style={{ width: `${uploadProgress}%` }}\r\n                        ></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Image Previews */}\r\n                  {uploadedImages.length > 0 && (\r\n                    <div className=\"mt-4\">\r\n                      <h3 className=\"text-sm font-medium mb-2\">\r\n                        Uploaded Images ({uploadedImages.length})\r\n                      </h3>\r\n                      <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4\">\r\n                        {uploadedImages.map((image, index) => (\r\n                          <div key={index} className=\"relative group\">\r\n                            <Image\r\n                              src={image}\r\n                              alt={`Car image ${index + 1}`}\r\n                              height={50}\r\n                              width={50}\r\n                              className=\"h-28 w-full object-cover rounded-md\"\r\n                              priority\r\n                            />\r\n                            <Button\r\n                              type=\"button\"\r\n                              size=\"icon\"\r\n                              variant=\"destructive\"\r\n                              className=\"absolute top-1 right-1 h-6 w-6 opacity-0 group-hover:opacity-100 transition-opacity\"\r\n                              onClick={() => removeImage(index)}\r\n                            >\r\n                              <X className=\"h-3 w-3\" />\r\n                            </Button>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"w-full md:w-auto\"\r\n                  disabled={addCarLoading}\r\n                >\r\n                  {addCarLoading ? (\r\n                    <>\r\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                      Adding Car...\r\n                    </>\r\n                  ) : (\r\n                    \"Add Car\"\r\n                  )}\r\n                </Button>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"ai\" className=\"mt-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>AI-Powered Car Details Extraction</CardTitle>\r\n              <CardDescription>\r\n                Upload an image of a car and let Gemini AI extract its details.\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                <div className=\"border-2 border-dashed rounded-lg p-6 text-center\">\r\n                  {imagePreview ? (\r\n                    <div className=\"flex flex-col items-center\">\r\n                      <img\r\n                        src={imagePreview}\r\n                        alt=\"Car preview\"\r\n                        className=\"max-h-56 max-w-full object-contain mb-4\"\r\n                      />\r\n                      <div className=\"flex gap-2\">\r\n                        <Button\r\n                          variant=\"outline\"\r\n                          size=\"sm\"\r\n                          onClick={() => {\r\n                            setImagePreview(null);\r\n                            setUploadedAiImage(null);\r\n                          }}\r\n                        >\r\n                          Remove\r\n                        </Button>\r\n                        <Button\r\n                          onClick={processWithAI}\r\n                          disabled={processImageLoading}\r\n                          size=\"sm\"\r\n                        >\r\n                          {processImageLoading ? (\r\n                            <>\r\n                              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                              Processing...\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <Camera className=\"mr-2 h-4 w-4\" />\r\n                              Extract Details\r\n                            </>\r\n                          )}\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div\r\n                      {...getAiRootProps()}\r\n                      className=\"cursor-pointer hover:bg-gray-50 transition\"\r\n                    >\r\n                      <input {...getAiInputProps()} />\r\n                      <div className=\"flex flex-col items-center justify-center\">\r\n                        <Camera className=\"h-12 w-12 text-gray-400 mb-3\" />\r\n                        <span className=\"text-sm text-gray-600\">\r\n                          Drag & drop or click to upload a car image\r\n                        </span>\r\n                        <span className=\"text-xs text-gray-500 mt-1\">\r\n                          (JPG, PNG, WebP, max 5MB)\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {processImageLoading && (\r\n                  <div className=\"bg-blue-50 text-blue-700 p-4 rounded-md flex items-center\">\r\n                    <Loader2 className=\"animate-spin h-5 w-5 mr-2\" />\r\n                    <div>\r\n                      <p className=\"font-medium\">Analyzing image...</p>\r\n                      <p className=\"text-sm\">\r\n                        Gemini AI is extracting car details\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"bg-gray-50 p-4 rounded-md\">\r\n                  <h3 className=\"font-medium mb-2\">How it works</h3>\r\n                  <ol className=\"space-y-2 text-sm text-gray-600 list-decimal pl-4\">\r\n                    <li>Upload a clear image of the car</li>\r\n                    <li>Click \"Extract Details\" to analyze with Gemini AI</li>\r\n                    <li>Review the extracted information</li>\r\n                    <li>Fill in any missing details manually</li>\r\n                    <li>Add the car to your inventory</li>\r\n                  </ol>\r\n                </div>\r\n\r\n                <div className=\"bg-amber-50 p-4 rounded-md\">\r\n                  <h3 className=\"font-medium text-amber-800 mb-1\">\r\n                    Tips for best results\r\n                  </h3>\r\n                  <ul className=\"space-y-1 text-sm text-amber-700\">\r\n                    <li>• Use clear, well-lit images</li>\r\n                    <li>• Try to capture the entire vehicle</li>\r\n                    <li>• For difficult models, use multiple views</li>\r\n                    <li>• Always verify AI-extracted information</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAOA;AAOA;AACA;AACA;AACA;AACA;AACA;AA3BA;AAFA;AAKA;AADA;AAAA;AAAA;AAAA;;;AARA;;;;;;;;;;;;;;;;;;;;AAmCA,qBAAqB;AACrB,MAAM,YAAY;IAAC;IAAU;IAAU;IAAY;IAAU;CAAiB;AAC9E,MAAM,gBAAgB;IAAC;IAAa;IAAU;CAAiB;AAC/D,MAAM,YAAY;IAChB;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AACD,MAAM,cAAc;IAAC;IAAa;IAAe;CAAO;AAExD,8BAA8B;AAC9B,MAAM,gBAAgB,wIAAE,MAAM,CAAC;IAC7B,MAAM,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IACxB,OAAO,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IACzB,MAAM,wIAAE,MAAM,GAAG,MAAM,CAAC,CAAC;QACvB,MAAM,OAAO,SAAS;QACtB,OAAO,CAAC,MAAM,SAAS,QAAQ,QAAQ,QAAQ,IAAI,OAAO,WAAW,KAAK;IAC5E,GAAG;IACH,OAAO,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IACzB,SAAS,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IAC3B,OAAO,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IACzB,UAAU,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,cAAc,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IAChC,UAAU,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,OAAO,wIAAE,MAAM,GAAG,QAAQ;IAC1B,aAAa,wIAAE,MAAM,GAAG,GAAG,CAAC,IAAI;IAChC,QAAQ,wIAAE,IAAI,CAAC;QAAC;QAAa;QAAe;KAAO;IACnD,UAAU,wIAAE,OAAO,GAAG,OAAO,CAAC;AAEhC;AAEO,MAAM,aAAa;;IACxB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACvD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,+CAA+C;IAC/C,MAAM,EACJ,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,WAAW,EAAE,MAAM,EAAE,EACrB,YAAY,EACZ,KAAK,EACN,GAAG,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE;QACV,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,MAAM;YACN,OAAO;YACP,MAAM;YACN,OAAO;YACP,SAAS;YACT,OAAO;YACP,UAAU;YACV,cAAc;YACd,UAAU;YACV,OAAO;YACP,aAAa;YACb,QAAQ;YACR,UAAU;QACZ;IACF;IAEA,6BAA6B;IAC7B,MAAM,EACJ,SAAS,aAAa,EACtB,IAAI,QAAQ,EACZ,MAAM,YAAY,EACnB,GAAG,CAAA,GAAA,wHAAA,CAAA,UAAQ,AAAD,EAAE,kHAAA,CAAA,SAAM;IAEnB,MAAM,EACJ,SAAS,mBAAmB,EAC5B,IAAI,cAAc,EAClB,MAAM,kBAAkB,EACxB,OAAO,iBAAiB,EACzB,GAAG,CAAA,GAAA,wHAAA,CAAA,UAAQ,AAAD,EAAE,kHAAA,CAAA,wBAAqB;IAElC,iCAAiC;IACjC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,IAAI,cAAc,SAAS;gBACzB,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;gBACd,OAAO,IAAI,CAAC;YACd;QACF;+BAAG;QAAC;QAAc;KAAO;IAEzB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,IAAI,mBAAmB;gBACrB,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,kBAAkB,OAAO,IAAI;YAC3C;QACF;+BAAG;QAAC;KAAkB;IAEtB,kCAAkC;IAClC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,IAAI,oBAAoB,SAAS;gBAC/B,MAAM,aAAa,mBAAmB,IAAI;gBAE1C,8BAA8B;gBAC9B,SAAS,QAAQ,WAAW,IAAI;gBAChC,SAAS,SAAS,WAAW,KAAK;gBAClC,SAAS,QAAQ,WAAW,IAAI,CAAC,QAAQ;gBACzC,SAAS,SAAS,WAAW,KAAK;gBAClC,SAAS,YAAY,WAAW,QAAQ;gBACxC,SAAS,YAAY,WAAW,QAAQ;gBACxC,SAAS,SAAS,WAAW,KAAK;gBAClC,SAAS,WAAW,WAAW,OAAO;gBACtC,SAAS,gBAAgB,WAAW,YAAY;gBAChD,SAAS,eAAe,WAAW,WAAW;gBAE9C,uCAAuC;gBACvC,MAAM,SAAS,IAAI;gBACnB,OAAO,MAAM;4CAAG,CAAC;wBACf;oDAAkB,CAAC,OAAS;uCAAI;oCAAM,EAAE,MAAM,CAAC,MAAM;iCAAC;;oBACxD;;gBACA,OAAO,aAAa,CAAC;gBAErB,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC,sCAAsC;oBAClD,aAAa,CAAC,SAAS,EAAE,WAAW,IAAI,CAAC,CAAC,EAAE,WAAW,IAAI,CAAC,CAAC,EAC3D,WAAW,KAAK,CACjB,MAAM,EAAE,KAAK,KAAK,CAAC,WAAW,UAAU,GAAG,KAAK,YAAY,CAAC;gBAChE;gBAEA,0EAA0E;gBAC1E,aAAa;YACf;QACF;+BAAG;QAAC;QAAoB;QAAU;KAAgB;IAElD,+BAA+B;IAC/B,MAAM,gBAAgB;QACpB,IAAI,CAAC,iBAAiB;YACpB,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;QACF;QAEA,MAAM,eAAe;IACvB;IAEA,uCAAuC;IACvC,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;4CAAE,CAAC;YAC5B,MAAM,OAAO,aAAa,CAAC,EAAE;YAC7B,IAAI,CAAC,MAAM;YAEX,IAAI,KAAK,IAAI,GAAG,IAAI,OAAO,MAAM;gBAC/B,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;gBACZ;YACF;YAEA,mBAAmB;YAEnB,MAAM,SAAS,IAAI;YACnB,OAAO,MAAM;oDAAG,CAAC;oBACf,gBAAgB,EAAE,MAAM,CAAC,MAAM;gBACjC;;YACA,OAAO,aAAa,CAAC;QACvB;2CAAG,EAAE;IAEL,MAAM,EAAE,cAAc,cAAc,EAAE,eAAe,eAAe,EAAE,GACpE,CAAA,GAAA,2KAAA,CAAA,cAAW,AAAD,EAAE;QACV,QAAQ;QACR,QAAQ;YACN,WAAW;gBAAC;gBAAS;gBAAQ;gBAAQ;aAAQ;QAC/C;QACA,UAAU;QACV,UAAU;IACZ;IAEF,8CAA8C;IAC9C,MAAM,oBAAoB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;qDAAE,CAAC;YACrC,MAAM,aAAa,cAAc,MAAM;wEAAC,CAAC;oBACvC,IAAI,KAAK,IAAI,GAAG,IAAI,OAAO,MAAM;wBAC/B,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,GAAG,KAAK,IAAI,CAAC,sCAAsC,CAAC;wBAChE,OAAO;oBACT;oBACA,OAAO;gBACT;;YAEA,IAAI,WAAW,MAAM,KAAK,GAAG;YAE7B,2BAA2B;YAC3B,IAAI,WAAW;YACf,MAAM,WAAW;sEAAY;oBAC3B,YAAY;oBACZ,kBAAkB;oBAElB,IAAI,YAAY,KAAK;wBACnB,cAAc;wBAEd,qBAAqB;wBACrB,MAAM,YAAY,EAAE;wBACpB,WAAW,OAAO;kFAAC,CAAC;gCAClB,MAAM,SAAS,IAAI;gCACnB,OAAO,MAAM;0FAAG,CAAC;wCACf,UAAU,IAAI,CAAC,EAAE,MAAM,CAAC,MAAM;wCAE9B,gCAAgC;wCAChC,IAAI,UAAU,MAAM,KAAK,WAAW,MAAM,EAAE;4CAC1C;sGAAkB,CAAC,OAAS;2DAAI;2DAAS;qDAAU;;4CACnD,kBAAkB;4CAClB,cAAc;4CACd,2IAAA,CAAA,QAAK,CAAC,OAAO,CACX,CAAC,sBAAsB,EAAE,WAAW,MAAM,CAAC,OAAO,CAAC;wCAEvD;oCACF;;gCACA,OAAO,aAAa,CAAC;4BACvB;;oBACF;gBACF;qEAAG;QACL;oDAAG,EAAE;IAEL,MAAM,EACJ,cAAc,sBAAsB,EACpC,eAAe,uBAAuB,EACvC,GAAG,CAAA,GAAA,2KAAA,CAAA,cAAW,AAAD,EAAE;QACd,QAAQ;QACR,QAAQ;YACN,WAAW;gBAAC;gBAAS;gBAAQ;gBAAQ;aAAQ;QAC/C;QACA,UAAU;IACZ;IAEA,mCAAmC;IACnC,MAAM,cAAc,CAAC;QACnB,kBAAkB,CAAC,OAAS,KAAK,MAAM,CAAC,CAAC,GAAG,IAAM,MAAM;IAC1D;IAEA,MAAM,WAAW,OAAO;QACtB,+BAA+B;QAC/B,IAAI,eAAe,MAAM,KAAK,GAAG;YAC/B,cAAc;YACd;QACF;QAEA,iCAAiC;QACjC,MAAM,UAAU;YACd,GAAG,IAAI;YACP,MAAM,SAAS,KAAK,IAAI;YACxB,OAAO,WAAW,KAAK,KAAK;YAC5B,SAAS,SAAS,KAAK,OAAO;YAC9B,OAAO,KAAK,KAAK,GAAG,SAAS,KAAK,KAAK,IAAI;QAC7C;QAEA,kDAAkD;QAClD,MAAM,SAAS;YACb;YACA,QAAQ;QACV;IACF;IAEA,qBACE,6LAAC;kBACC,cAAA,6LAAC,4HAAA,CAAA,OAAI;YACH,cAAa;YACb,OAAO;YACP,eAAe;YACf,WAAU;;8BAEV,6LAAC,4HAAA,CAAA,WAAQ;oBAAC,WAAU;;sCAClB,6LAAC,4HAAA,CAAA,cAAW;4BAAC,OAAM;sCAAS;;;;;;sCAC5B,6LAAC,4HAAA,CAAA,cAAW;4BAAC,OAAM;sCAAK;;;;;;;;;;;;8BAG1B,6LAAC,4HAAA,CAAA,cAAW;oBAAC,OAAM;oBAAS,WAAU;8BACpC,cAAA,6LAAC,4HAAA,CAAA,OAAI;;0CACH,6LAAC,4HAAA,CAAA,aAAU;;kDACT,6LAAC,4HAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,6LAAC,4HAAA,CAAA,kBAAe;kDAAC;;;;;;;;;;;;0CAInB,6LAAC,4HAAA,CAAA,cAAW;0CACV,cAAA,6LAAC;oCAAK,UAAU,aAAa;oCAAW,WAAU;;sDAChD,6LAAC;4CAAI,WAAU;;8DAEb,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,6HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAO;;;;;;sEACtB,6LAAC,6HAAA,CAAA,QAAK;4DACJ,IAAG;4DACF,GAAG,SAAS,OAAO;4DACpB,aAAY;4DACZ,WAAW,OAAO,IAAI,GAAG,mBAAmB;;;;;;wDAE7C,OAAO,IAAI,kBACV,6LAAC;4DAAE,WAAU;sEACV,OAAO,IAAI,CAAC,OAAO;;;;;;;;;;;;8DAM1B,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,6HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAQ;;;;;;sEACvB,6LAAC,6HAAA,CAAA,QAAK;4DACJ,IAAG;4DACF,GAAG,SAAS,QAAQ;4DACrB,aAAY;4DACZ,WAAW,OAAO,KAAK,GAAG,mBAAmB;;;;;;wDAE9C,OAAO,KAAK,kBACX,6LAAC;4DAAE,WAAU;sEACV,OAAO,KAAK,CAAC,OAAO;;;;;;;;;;;;8DAM3B,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,6HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAO;;;;;;sEACtB,6LAAC,6HAAA,CAAA,QAAK;4DACJ,IAAG;4DACF,GAAG,SAAS,OAAO;4DACpB,aAAY;4DACZ,WAAW,OAAO,IAAI,GAAG,mBAAmB;;;;;;wDAE7C,OAAO,IAAI,kBACV,6LAAC;4DAAE,WAAU;sEACV,OAAO,IAAI,CAAC,OAAO;;;;;;;;;;;;8DAM1B,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,6HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAQ;;;;;;sEACvB,6LAAC,6HAAA,CAAA,QAAK;4DACJ,IAAG;4DACF,GAAG,SAAS,QAAQ;4DACrB,aAAY;4DACZ,WAAW,OAAO,KAAK,GAAG,mBAAmB;;;;;;wDAE9C,OAAO,KAAK,kBACX,6LAAC;4DAAE,WAAU;sEACV,OAAO,KAAK,CAAC,OAAO;;;;;;;;;;;;8DAM3B,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,6HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAU;;;;;;sEACzB,6LAAC,6HAAA,CAAA,QAAK;4DACJ,IAAG;4DACF,GAAG,SAAS,UAAU;4DACvB,aAAY;4DACZ,WAAW,OAAO,OAAO,GAAG,mBAAmB;;;;;;wDAEhD,OAAO,OAAO,kBACb,6LAAC;4DAAE,WAAU;sEACV,OAAO,OAAO,CAAC,OAAO;;;;;;;;;;;;8DAM7B,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,6HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAQ;;;;;;sEACvB,6LAAC,6HAAA,CAAA,QAAK;4DACJ,IAAG;4DACF,GAAG,SAAS,QAAQ;4DACrB,aAAY;4DACZ,WAAW,OAAO,KAAK,GAAG,mBAAmB;;;;;;wDAE9C,OAAO,KAAK,kBACX,6LAAC;4DAAE,WAAU;sEACV,OAAO,KAAK,CAAC,OAAO;;;;;;;;;;;;8DAM3B,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,6HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAW;;;;;;sEAC1B,6LAAC,8HAAA,CAAA,SAAM;4DACL,eAAe,CAAC,QAAU,SAAS,YAAY;4DAC/C,cAAc,UAAU;;8EAExB,6LAAC,8HAAA,CAAA,gBAAa;oEACZ,WAAW,OAAO,QAAQ,GAAG,mBAAmB;8EAEhD,cAAA,6LAAC,8HAAA,CAAA,cAAW;wEAAC,aAAY;;;;;;;;;;;8EAE3B,6LAAC,8HAAA,CAAA,gBAAa;8EACX,UAAU,GAAG,CAAC,CAAC,qBACd,6LAAC,8HAAA,CAAA,aAAU;4EAAY,OAAO;sFAC3B;2EADc;;;;;;;;;;;;;;;;wDAMtB,OAAO,QAAQ,kBACd,6LAAC;4DAAE,WAAU;sEACV,OAAO,QAAQ,CAAC,OAAO;;;;;;;;;;;;8DAM9B,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,6HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAe;;;;;;sEAC9B,6LAAC,8HAAA,CAAA,SAAM;4DACL,eAAe,CAAC,QAAU,SAAS,gBAAgB;4DACnD,cAAc,UAAU;;8EAExB,6LAAC,8HAAA,CAAA,gBAAa;oEACZ,WAAW,OAAO,YAAY,GAAG,mBAAmB;8EAEpD,cAAA,6LAAC,8HAAA,CAAA,cAAW;wEAAC,aAAY;;;;;;;;;;;8EAE3B,6LAAC,8HAAA,CAAA,gBAAa;8EACX,cAAc,GAAG,CAAC,CAAC,qBAClB,6LAAC,8HAAA,CAAA,aAAU;4EAAY,OAAO;sFAC3B;2EADc;;;;;;;;;;;;;;;;wDAMtB,OAAO,YAAY,kBAClB,6LAAC;4DAAE,WAAU;sEACV,OAAO,YAAY,CAAC,OAAO;;;;;;;;;;;;8DAMlC,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,6HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAW;;;;;;sEAC1B,6LAAC,8HAAA,CAAA,SAAM;4DACL,eAAe,CAAC,QAAU,SAAS,YAAY;4DAC/C,cAAc,UAAU;;8EAExB,6LAAC,8HAAA,CAAA,gBAAa;oEACZ,WAAW,OAAO,QAAQ,GAAG,mBAAmB;8EAEhD,cAAA,6LAAC,8HAAA,CAAA,cAAW;wEAAC,aAAY;;;;;;;;;;;8EAE3B,6LAAC,8HAAA,CAAA,gBAAa;8EACX,UAAU,GAAG,CAAC,CAAC,qBACd,6LAAC,8HAAA,CAAA,aAAU;4EAAY,OAAO;sFAC3B;2EADc;;;;;;;;;;;;;;;;wDAMtB,OAAO,QAAQ,kBACd,6LAAC;4DAAE,WAAU;sEACV,OAAO,QAAQ,CAAC,OAAO;;;;;;;;;;;;8DAM9B,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,6HAAA,CAAA,QAAK;4DAAC,SAAQ;;gEAAQ;gEACL;8EAChB,6LAAC;oEAAK,WAAU;8EAAwB;;;;;;;;;;;;sEAE1C,6LAAC,6HAAA,CAAA,QAAK;4DACJ,IAAG;4DACF,GAAG,SAAS,QAAQ;4DACrB,aAAY;;;;;;;;;;;;8DAKhB,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,6HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAS;;;;;;sEACxB,6LAAC,8HAAA,CAAA,SAAM;4DACL,eAAe,CAAC,QAAU,SAAS,UAAU;4DAC7C,cAAc,UAAU;;8EAExB,6LAAC,8HAAA,CAAA,gBAAa;8EACZ,cAAA,6LAAC,8HAAA,CAAA,cAAW;wEAAC,aAAY;;;;;;;;;;;8EAE3B,6LAAC,8HAAA,CAAA,gBAAa;8EACX,YAAY,GAAG,CAAC,CAAC,uBAChB,6LAAC,8HAAA,CAAA,aAAU;4EAAc,OAAO;sFAC7B,OAAO,MAAM,CAAC,KAAK,OAAO,KAAK,CAAC,GAAG,WAAW;2EADhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;sDAU3B,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,6HAAA,CAAA,QAAK;oDAAC,SAAQ;8DAAc;;;;;;8DAC7B,6LAAC,gIAAA,CAAA,WAAQ;oDACP,IAAG;oDACF,GAAG,SAAS,cAAc;oDAC3B,aAAY;oDACZ,WAAW,CAAC,SAAS,EACnB,OAAO,WAAW,GAAG,mBAAmB,IACxC;;;;;;gDAEH,OAAO,WAAW,kBACjB,6LAAC;oDAAE,WAAU;8DACV,OAAO,WAAW,CAAC,OAAO;;;;;;;;;;;;sDAMjC,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,gIAAA,CAAA,WAAQ;oDACP,IAAG;oDACH,SAAS,MAAM;oDACf,iBAAiB,CAAC;wDAChB,SAAS,YAAY;oDACvB;;;;;;8DAEF,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,6HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAW;;;;;;sEAC1B,6LAAC;4DAAE,WAAU;sEAAwB;;;;;;;;;;;;;;;;;;sDAOzC,6LAAC;;8DACC,6LAAC,6HAAA,CAAA,QAAK;oDACJ,SAAQ;oDACR,WAAW,aAAa,iBAAiB;;wDAC1C;wDACQ;wDACN,4BAAc,6LAAC;4DAAK,WAAU;sEAAe;;;;;;;;;;;;8DAEhD,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DACE,GAAG,wBAAwB;4DAC5B,WAAW,CAAC,6FAA6F,EACvG,aAAa,mBAAmB,mBAChC;;8EAEF,6LAAC;oEAAO,GAAG,yBAAyB;;;;;;8EACpC,6LAAC;oEAAI,WAAU;;sFACb,6LAAC,yMAAA,CAAA,SAAM;4EAAC,WAAU;;;;;;sFAClB,6LAAC;4EAAK,WAAU;sFAAwB;;;;;;sFAGxC,6LAAC;4EAAK,WAAU;sFAA6B;;;;;;;;;;;;;;;;;;wDAKhD,4BACC,6LAAC;4DAAE,WAAU;sEAA6B;;;;;;wDAE3C,iBAAiB,mBAChB,6LAAC;4DAAI,WAAU;sEACb,cAAA,6LAAC;gEACC,WAAU;gEACV,OAAO;oEAAE,OAAO,GAAG,eAAe,CAAC,CAAC;gEAAC;;;;;;;;;;;;;;;;;gDAO5C,eAAe,MAAM,GAAG,mBACvB,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAG,WAAU;;gEAA2B;gEACrB,eAAe,MAAM;gEAAC;;;;;;;sEAE1C,6LAAC;4DAAI,WAAU;sEACZ,eAAe,GAAG,CAAC,CAAC,OAAO,sBAC1B,6LAAC;oEAAgB,WAAU;;sFACzB,6LAAC,gIAAA,CAAA,UAAK;4EACJ,KAAK;4EACL,KAAK,CAAC,UAAU,EAAE,QAAQ,GAAG;4EAC7B,QAAQ;4EACR,OAAO;4EACP,WAAU;4EACV,QAAQ;;;;;;sFAEV,6LAAC,8HAAA,CAAA,SAAM;4EACL,MAAK;4EACL,MAAK;4EACL,SAAQ;4EACR,WAAU;4EACV,SAAS,IAAM,YAAY;sFAE3B,cAAA,6LAAC,+LAAA,CAAA,IAAC;gFAAC,WAAU;;;;;;;;;;;;mEAhBP;;;;;;;;;;;;;;;;;;;;;;sDAyBpB,6LAAC,8HAAA,CAAA,SAAM;4CACL,MAAK;4CACL,WAAU;4CACV,UAAU;sDAET,8BACC;;kEACE,6LAAC,oNAAA,CAAA,UAAO;wDAAC,WAAU;;;;;;oDAA8B;;+DAInD;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAQZ,6LAAC,4HAAA,CAAA,cAAW;oBAAC,OAAM;oBAAK,WAAU;8BAChC,cAAA,6LAAC,4HAAA,CAAA,OAAI;;0CACH,6LAAC,4HAAA,CAAA,aAAU;;kDACT,6LAAC,4HAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,6LAAC,4HAAA,CAAA,kBAAe;kDAAC;;;;;;;;;;;;0CAInB,6LAAC,4HAAA,CAAA,cAAW;0CACV,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDACZ,6BACC,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDACC,KAAK;wDACL,KAAI;wDACJ,WAAU;;;;;;kEAEZ,6LAAC;wDAAI,WAAU;;0EACb,6LAAC,8HAAA,CAAA,SAAM;gEACL,SAAQ;gEACR,MAAK;gEACL,SAAS;oEACP,gBAAgB;oEAChB,mBAAmB;gEACrB;0EACD;;;;;;0EAGD,6LAAC,8HAAA,CAAA,SAAM;gEACL,SAAS;gEACT,UAAU;gEACV,MAAK;0EAEJ,oCACC;;sFACE,6LAAC,oNAAA,CAAA,UAAO;4EAAC,WAAU;;;;;;wEAA8B;;iGAInD;;sFACE,6LAAC,yMAAA,CAAA,SAAM;4EAAC,WAAU;;;;;;wEAAiB;;;;;;;;;;;;;;;;;;;qEAQ7C,6LAAC;gDACE,GAAG,gBAAgB;gDACpB,WAAU;;kEAEV,6LAAC;wDAAO,GAAG,iBAAiB;;;;;;kEAC5B,6LAAC;wDAAI,WAAU;;0EACb,6LAAC,yMAAA,CAAA,SAAM;gEAAC,WAAU;;;;;;0EAClB,6LAAC;gEAAK,WAAU;0EAAwB;;;;;;0EAGxC,6LAAC;gEAAK,WAAU;0EAA6B;;;;;;;;;;;;;;;;;;;;;;;wCAQpD,qCACC,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,oNAAA,CAAA,UAAO;oDAAC,WAAU;;;;;;8DACnB,6LAAC;;sEACC,6LAAC;4DAAE,WAAU;sEAAc;;;;;;sEAC3B,6LAAC;4DAAE,WAAU;sEAAU;;;;;;;;;;;;;;;;;;sDAO7B,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAG,WAAU;8DAAmB;;;;;;8DACjC,6LAAC;oDAAG,WAAU;;sEACZ,6LAAC;sEAAG;;;;;;sEACJ,6LAAC;sEAAG;;;;;;sEACJ,6LAAC;sEAAG;;;;;;sEACJ,6LAAC;sEAAG;;;;;;sEACJ,6LAAC;sEAAG;;;;;;;;;;;;;;;;;;sDAIR,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAG,WAAU;8DAAkC;;;;;;8DAGhD,6LAAC;oDAAG,WAAU;;sEACZ,6LAAC;sEAAG;;;;;;sEACJ,6LAAC;sEAAG;;;;;;sEACJ,6LAAC;sEAAG;;;;;;sEACJ,6LAAC;sEAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUxB;GAnrBa;;QACI,qIAAA,CAAA,YAAS;QAgBpB,iKAAA,CAAA,UAAO;QAwBP,wHAAA,CAAA,UAAQ;QAOR,wHAAA,CAAA,UAAQ;QAiFV,2KAAA,CAAA,cAAW;QAwDT,2KAAA,CAAA,cAAW;;;KAzLJ"}},
    {"offset": {"line": 2232, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}