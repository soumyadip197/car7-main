{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/middleware.js"],"sourcesContent":["import arcjet, { createMiddleware, detectBot, shield } from \"@arcjet/next\";\r\nimport { clerkMiddleware, createRouteMatcher } from \"@clerk/nextjs/server\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nconst isProtectedRoute = createRouteMatcher([\r\n  \"/admin(.*)\",\r\n  \"/saved-cars(.*)\",\r\n  \"/reservations(.*)\",\r\n]);\r\n\r\n// Create Arcjet middleware\r\nconst aj = arcjet({\r\n  key: process.env.ARCJET_KEY,\r\n  // characteristics: [\"userId\"], // Track based on Clerk userId\r\n  rules: [\r\n    // Shield protection for content and security\r\n    shield({\r\n      mode: \"LIVE\",\r\n    }),\r\n    detectBot({\r\n      mode: \"LIVE\", // will block requests. Use \"DRY_RUN\" to log only\r\n      allow: [\r\n        \"CATEGORY:SEARCH_ENGINE\", // Google, Bing, etc\r\n        // See the full list at https://arcjet.com/bot-list\r\n      ],\r\n    }),\r\n  ],\r\n});\r\n\r\n// Create base Clerk middleware\r\nconst clerk = clerkMiddleware(async (auth, req) => {\r\n  const { userId } = await auth();\r\n\r\n  if (!userId && isProtectedRoute(req)) {\r\n    const { redirectToSignIn } = await auth();\r\n    return redirectToSignIn();\r\n  }\r\n\r\n  return NextResponse.next();\r\n});\r\n\r\n// Chain middlewares - ArcJet runs first, then Clerk\r\nexport default createMiddleware(aj, clerk);\r\n\r\nexport const config = {\r\n  matcher: [\r\n    // Skip Next.js internals and all static files, unless found in search params\r\n    \"/((?!_next|[^?]*\\\\.(?:html?|css|js(?!on)|jpe?g|webp|png|gif|svg|ttf|woff2?|ico|csv|docx?|xlsx?|zip|webmanifest)).*)\",\r\n    // Always run for API routes\r\n    \"/(api|trpc)(.*)\",\r\n  ],\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;AADA;AADA;AAAA;AACA;AACA;;;;;;;;;;AAEA,MAAM,mBAAmB,CAAA,GAAA,0KAAA,CAAA,qBAAkB,AAAD,EAAE;IAC1C;IACA;IACA;CACD;AAED,2BAA2B;AAC3B,MAAM,KAAK,CAAA,GAAA,yJAAA,CAAA,UAAM,AAAD,EAAE;IAChB,KAAK,QAAQ,GAAG,CAAC,UAAU;IAC3B,8DAA8D;IAC9D,OAAO;QACL,6CAA6C;QAC7C,CAAA,GAAA,+IAAA,CAAA,SAAM,AAAD,EAAE;YACL,MAAM;QACR;QACA,CAAA,GAAA,+IAAA,CAAA,YAAS,AAAD,EAAE;YACR,MAAM;YACN,OAAO;gBACL;aAED;QACH;KACD;AACH;AAEA,+BAA+B;AAC/B,MAAM,QAAQ,CAAA,GAAA,6KAAA,CAAA,kBAAe,AAAD,EAAE,OAAO,MAAM;IACzC,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM;IAEzB,IAAI,CAAC,UAAU,iBAAiB,MAAM;QACpC,MAAM,EAAE,gBAAgB,EAAE,GAAG,MAAM;QACnC,OAAO;IACT;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;uCAGe,CAAA,GAAA,yJAAA,CAAA,mBAAgB,AAAD,EAAE,IAAI;AAE7B,MAAM,SAAS;IACpB,SAAS;QACP,6EAA6E;QAC7E;QACA,4BAA4B;QAC5B;KACD;AACH"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}